module controller (
    input clk,  // 100MHz clock
    input rst,  // reset
    input adder_inputs[3],  // {a, b, cin}
    input adder_outputs[2],  // {cout, s}
    input do_test,  // enable test
    input end_test,  // end test
    output result_ready,  // result is ready
    output result  // result of the test (1 is passed, 0 is failed)
  ) {

  tester tester(.inputs(adder_inputs), .outputs(adder_outputs));

  .clk(clk) {
    .rst(rst) {
      dff done;  // test ended
      dff failed;  // test failed
    }
  }

  always {
    failed.d = failed.q | (~tester.correct & do_test);  // check whether (test has already failed) or (one test case failed and test is enabled)
    done.d = done.q | end_test | failed.q;  // check whether (test already ended) or (end_test signal is triggered due to counter overflow) or (test already failed)

    result_ready = done.q;
    result = ~failed.q;
  }
}