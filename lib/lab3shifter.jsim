.checkoff "" "Lab #3: shifter" 0

.verify shift[31:0] periodic(9.9E-8,1.0000000000000001E-7)
+ 0x87654321
+ 0x0ECA8642
+ 0x1D950C84
+ 0x3B2A1908
+ 0x76543210
+ 0xECA86420
+ 0xD950C840
+ 0xB2A19080
+ 0x65432100
+ 0xCA864200
+ 0x950C8400
+ 0x2A190800
+ 0x54321000
+ 0xA8642000
+ 0x50C84000
+ 0xA1908000
+ 0x43210000
+ 0x86420000
+ 0x0C840000
+ 0x19080000
+ 0x32100000
+ 0x64200000
+ 0xC8400000
+ 0x90800000
+ 0x21000000
+ 0x42000000
+ 0x84000000
+ 0x08000000
+ 0x10000000
+ 0x20000000
+ 0x40000000
+ 0x80000000
+ 0xFEDCBA98
+ 0x3F6E5D4C
+ 0x3FB72EA6
+ 0x0FDB9753
+ 0x0FEDCBA9
+ 0x03F6E5D4
+ 0x03FB72EA
+ 0x00FDB975
+ 0x007EDCBA
+ 0x007F6E5D
+ 0x001FB72E
+ 0x001FDB97
+ 0x0007EDCB
+ 0x0007F6E5
+ 0x0001FB72
+ 0x0001FDB9
+ 0x0000FEDC
+ 0x00003F6E
+ 0x00003FB7
+ 0x00000FDB
+ 0x00000FED
+ 0x000003F6
+ 0x000003FB
+ 0x000000FD
+ 0x0000007E
+ 0x0000007F
+ 0x0000001F
+ 0x0000001F
+ 0x00000007
+ 0x00000007
+ 0x00000001
+ 0x00000001
+ 0x87654321
+ 0x3B2A1908
+ 0xE1D950C8
+ 0x0ECA8642
+ 0xF8765432
+ 0x03B2A190
+ 0xFE1D950C
+ 0x00ECA864
+ 0x00765432
+ 0xFFC3B2A1
+ 0x001D950C
+ 0xFFF0ECA8
+ 0x00076543
+ 0xFFFC3B2A
+ 0x0001D950
+ 0xFFFF0ECA
+ 0xFFFF8765
+ 0x00003B2A
+ 0xFFFFE1D9
+ 0x00000ECA
+ 0xFFFFF876
+ 0x000003B2
+ 0xFFFFFE1D
+ 0x000000EC
+ 0x00000076
+ 0xFFFFFFC3
+ 0x0000001D
+ 0xFFFFFFF0
+ 0x00000007
+ 0xFFFFFFFC
+ 0x00000001
+ 0xFFFFFFFF

* instantiate shifter
Xshift alufn[1:0] a[31:0] b[4:0] shift[31:0] shift32

* Generate sample 32-bit inputs for A and B and try different control settings

Wa a[31:0] nrz(0,3.3,100n,0n,.1n,.1n)
+ 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321
+ 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321
+ 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321
+ 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321 0x87654321
// test right shift
+ 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98
+ 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98
+ 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98
+ 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98 0x7EDCBA98 0xFEDCBA98
// test arithmetic right shift
+ 0x87654321 0x76543210 0x87654321 0x76543210 0x87654321 0x76543210 0x87654321 0x76543210
+ 0x76543210 0x87654321 0x76543210 0x87654321 0x76543210 0x87654321 0x76543210 0x87654321
+ 0x87654321 0x76543210 0x87654321 0x76543210 0x87654321 0x76543210 0x87654321 0x76543210
+ 0x76543210 0x87654321 0x76543210 0x87654321 0x76543210 0x87654321 0x76543210 0x87654321

Wb b[4:0] nrz(0,3.3,100n,0n,.1n,.1n)
// test left shift
+ 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07
+ 0x08 0x09 0x0A 0x0B 0x0C 0x0D 0x0E 0x0F
+ 0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17
+ 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F
// test right shift
+ 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07
+ 0x08 0x09 0x0A 0x0B 0x0C 0x0D 0x0E 0x0F
+ 0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17
+ 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F
// test arithmetic right shift
+ 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07
+ 0x08 0x09 0x0A 0x0B 0x0C 0x0D 0x0E 0x0F
+ 0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17
+ 0x18 0x19 0x1A 0x1B 0x1C 0x1D 0x1E 0x1F

Wc alufn[1:0] nrz(0,3.3,100n,0n,.1n,.1n) 
+ 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0  // SHL
+ 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0
+ 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0
+ 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0
+ 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1  // SHR
+ 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1
+ 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1
+ 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1
+ 0x3 0x3 0x3 0x3 0x3 0x3 0x3 0x3  // SRA
+ 0x3 0x3 0x3 0x3 0x3 0x3 0x3 0x3
+ 0x3 0x3 0x3 0x3 0x3 0x3 0x3 0x3
+ 0x3 0x3 0x3 0x3 0x3 0x3 0x3 0x3

* Run the simulation long enough to test all input values
.tran 9600n

* Some useful plots... you can plot additional signals by specifying
* the appropriate .plot commands in your main netlist file.
.plotdef op SHL SHR ??? SRA
.plot L(a[31:0])
.plot L(b[4:0])
.plot op(alufn[1:0])
.plot L(shift[31:0])
